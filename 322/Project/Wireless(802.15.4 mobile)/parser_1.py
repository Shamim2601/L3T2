from functions import *
import sys

#python3 parser_1.py to run all trace files in Output folder
#for specific trace file, pass 3 arguments (area node flow)

manual = False
inp_Node = '40'
inp_flow = '20'
inp_packet_rate = '200'
inp_node_speed = '10'

if len(sys.argv)==5:
    # print(f"{len(sys.argv)} arg found")
    inp_Node = sys.argv[1]
    inp_flow = sys.argv[2]
    inp_packet_rate = sys.argv[3]
    inp_node_speed = sys.argv[4]
    manual = True

Y_output_node = {
    'throughput': [],
    'avgDelay': [],
    'deliveryRatio': [],
    'dropRatio': [],
    'energy': [],
}
Y_output_flow = {
    'throughput': [],
    'avgDelay': [],
    'deliveryRatio': [],
    'dropRatio': [],
    'energy': [],
}
Y_output_packet = {
    'throughput': [],
    'avgDelay': [],
    'deliveryRatio': [],
    'dropRatio': [],
    'energy': [],
}
Y_output_speed = {
    'throughput': [],
    'avgDelay': [],
    'deliveryRatio': [],
    'dropRatio': [],
    'energy': [],
}
Y_output_inp = {
    'throughput': [],
    'avgDelay': [],
    'deliveryRatio': [],
    'dropRatio': [],
    'energy': [],
}


X_input = {}
X_input['node'] = [20, 40, 60, 80, 100]
X_input['flow'] = [10, 20, 30, 40, 50]
X_input['packet'] = [100, 200, 300, 400, 500]
X_input['speed'] = [5, 10, 15, 20, 25]

fileNameInp = [inp_Node+'_'+inp_flow+'_'+inp_packet_rate+'_'+inp_node_speed+'.tr']


# trace files generated by varying num of nodes
fileNamesNode = ['20_20_200_10.tr', '40_20_200_10.tr', '60_20_200_10.tr',
              '80_20_200_10.tr', '100_20_200_10.tr']  
 
# trace files generated by varying num of flow             
fileNamesFlow = ['40_10_200_10.tr', '40_20_200_10.tr', '40_30_200_10.tr',
             '40_40_200_10.tr', '40_50_200_10.tr']  

# trace files generated by varying num of packet            
fileNamesPacket = ['40_20_100_10.tr', '40_20_200_10.tr', '40_20_300_10.tr',
             '40_20_400_10.tr', '40_20_500_10.tr'] 

# trace files generated by varying value of speed            
fileNamesSpeed = ['40_20_200_5.tr', '40_20_200_10.tr', '40_20_200_15.tr',
             '40_20_200_20.tr', '40_20_200_25.tr'] 


if manual is True:
    i = 0
    for name in fileNameInp:

        temp_List = {}
        print("User Input File{} : {}".format(i+1, name))
        file = open('Output/'+name, 'r')
        temp_List = myFunctionFlow(file)
        Y_output_inp['throughput'].append(temp_List['throughput'])
        Y_output_inp['avgDelay'].append(temp_List['avgDelay'])
        Y_output_inp['deliveryRatio'].append(temp_List['deliveryRatio'])
        Y_output_inp['dropRatio'].append(temp_List['dropRatio'])
        Y_output_inp['energy'].append(temp_List['energy'])

        print("-------------------------------------\n")
        i = i+1
    temp_List.clear()
else:
    i = 0
    for name in fileNamesNode:

        temp_List = {}
        print("Node Variation File{}    :{}".format(i+1, name))
        file = open('Output/'+name, 'r')
        temp_List = myFunctionFlow(file)
        Y_output_node['throughput'].append(temp_List['throughput'])
        Y_output_node['avgDelay'].append(temp_List['avgDelay'])
        Y_output_node['deliveryRatio'].append(temp_List['deliveryRatio'])
        Y_output_node['dropRatio'].append(temp_List['dropRatio'])
        Y_output_node['energy'].append(temp_List['energy'])

        print("-------------------------------------\n")
        i = i+1
    temp_List.clear()
    
    i = 0
    for name in fileNamesFlow:

        temp_List = {}
        print("Flow Variation File{}    :{}".format(i+1, name))
        file = open('Output/'+name, 'r')
        temp_List = myFunctionFlow(file)
        Y_output_flow['throughput'].append(temp_List['throughput'])
        Y_output_flow['avgDelay'].append(temp_List['avgDelay'])
        Y_output_flow['deliveryRatio'].append(temp_List['deliveryRatio'])
        Y_output_flow['dropRatio'].append(temp_List['dropRatio'])
        Y_output_flow['energy'].append(temp_List['energy'])

        print("-------------------------------------\n")
        i = i+1
    temp_List.clear()

    i = 0
    for name in fileNamesPacket:

        temp_List = {}
        print("Packet Variation File{}    :{}".format(i+1, name))
        file = open('Output/'+name, 'r')
        temp_List = myFunctionFlow(file)
        Y_output_packet['throughput'].append(temp_List['throughput'])
        Y_output_packet['avgDelay'].append(temp_List['avgDelay'])
        Y_output_packet['deliveryRatio'].append(temp_List['deliveryRatio'])
        Y_output_packet['dropRatio'].append(temp_List['dropRatio'])
        Y_output_packet['energy'].append(temp_List['energy'])

        print("-------------------------------------\n")
        i = i+1
    temp_List.clear()

    i = 0
    for name in fileNamesSpeed:

        temp_List = {}
        print("Speed Variation File{}    :{}".format(i+1, name))
        file = open('Output/'+name, 'r')
        temp_List = myFunctionFlow(file)
        Y_output_speed['throughput'].append(temp_List['throughput'])
        Y_output_speed['avgDelay'].append(temp_List['avgDelay'])
        Y_output_speed['deliveryRatio'].append(temp_List['deliveryRatio'])
        Y_output_speed['dropRatio'].append(temp_List['dropRatio'])
        Y_output_speed['energy'].append(temp_List['energy'])

        print("-------------------------------------\n")
        i = i+1
    temp_List.clear()

    

    
    y_Attributes=['throughput','avgDelay','deliveryRatio','dropRatio','energy']
    
    for y_attribute in y_Attributes:
        plotGraph(X_input['node'], Y_output_node[y_attribute],
            'Node', y_attribute, 'Node Variation: {} Vs Node'.format(y_attribute))
            
    for y_attribute in y_Attributes:
        plotGraph(X_input['flow'], Y_output_flow[y_attribute],
            'Flow', y_attribute, 'Flow Variation: {} Vs Flow'.format(y_attribute))

    for y_attribute in y_Attributes:
        plotGraph(X_input['packet'], Y_output_packet[y_attribute],
            'Packet', y_attribute, 'Packet Variation: {} Vs Num_of_Packets'.format(y_attribute))

    for y_attribute in y_Attributes:
        plotGraph(X_input['flow'], Y_output_speed[y_attribute],
            'Speed', y_attribute, 'Speed Variation: {} Vs Speed'.format(y_attribute))



